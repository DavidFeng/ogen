{% import "ast" %}
{% import "header.tmpl" for Header %}
{{ Header() }}

{% for _, schema := range Schemas %}
{% switch schema.Kind %}
{% case "struct" %}
    type {{ schema.Name }} struct {
        {% for field in schema.Fields %}
        {{ field.Name }} {{ field.Type.Type() }} `json:"{{ field.Tag }}"`
        {% end %}
    }
{% case "alias" %}
    type {{ schema.Name }} {{ schema.AliasTo.Type() }}
{% case "enum" %}
    type {{ schema.Name }} {{ schema.Primitive }}
    
    const (
        {% for value in schema.EnumValues %}
        {{ schema.Name+pascalMP(toString(value)) }} {{ schema.Name }} = {{ enumString(value) }}
        {% end %}
    )
{% default %}
    unsupported kind {{ schema.Kind }}
{% end %}

{% for method in schema.Methods() %}
func (*{{ schema.Name }}) {{ method }}() {}
{% end %}

{% end %}
