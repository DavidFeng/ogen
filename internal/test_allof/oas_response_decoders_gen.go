// Code generated by ogen, DO NOT EDIT.

package api

import (
	"net/http"

	"go.opentelemetry.io/otel/trace"

	"github.com/ogen-go/ogen/validate"
)

func decodeNullableStringsResponse(resp *http.Response, span trace.Span) (err error) {
	switch resp.StatusCode {
	case 200:
		return nil
	default:
		return validate.UnexpectedStatusCode(resp.StatusCode)
	}
}
func decodeObjectsWithConflictingArrayPropertyResponse(resp *http.Response, span trace.Span) (err error) {
	switch resp.StatusCode {
	case 200:
		return nil
	default:
		return validate.UnexpectedStatusCode(resp.StatusCode)
	}
}
func decodeObjectsWithConflictingPropertiesResponse(resp *http.Response, span trace.Span) (err error) {
	switch resp.StatusCode {
	case 200:
		return nil
	default:
		return validate.UnexpectedStatusCode(resp.StatusCode)
	}
}
func decodeReferencedAllofResponse(resp *http.Response, span trace.Span) (err error) {
	switch resp.StatusCode {
	case 200:
		return nil
	default:
		return validate.UnexpectedStatusCode(resp.StatusCode)
	}
}
func decodeReferencedAllofOptionalResponse(resp *http.Response, span trace.Span) (err error) {
	switch resp.StatusCode {
	case 200:
		return nil
	default:
		return validate.UnexpectedStatusCode(resp.StatusCode)
	}
}
func decodeSimpleIntegerResponse(resp *http.Response, span trace.Span) (err error) {
	switch resp.StatusCode {
	case 200:
		return nil
	default:
		return validate.UnexpectedStatusCode(resp.StatusCode)
	}
}
func decodeSimpleObjectsResponse(resp *http.Response, span trace.Span) (err error) {
	switch resp.StatusCode {
	case 200:
		return nil
	default:
		return validate.UnexpectedStatusCode(resp.StatusCode)
	}
}
